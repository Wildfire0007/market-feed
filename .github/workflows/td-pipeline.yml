name: TD Full Pipeline (5m)

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"   # 5 percenként (UTC)

permissions:
  contents: write
  
concurrency:
  group: td-pipeline
  cancel-in-progress: true

jobs:
  trading:
    name: 1) Trading.py — adatszedés (TD)
    runs-on: ubuntu-latest
    env:
      OUT_DIR: public
      TD_PAUSE: "0.3"
      TWELVEDATA_API_KEY: ${{ secrets.TWELVEDATA_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Sync default branch
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"   
      
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Show sklearn/joblib versions
        run: |
          python - <<'PY'
          import sklearn, joblib
          print("scikit-learn:", sklearn.__version__)
          print("joblib:", joblib.__version__)
          PY

      - name: Run Trading.py (pull all OHLC + spot)
        run: python Trading.py

      - name: Commit & Push trading outputs
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A public
          if ! git diff --cached --quiet; then
            git commit -m "Trading.py: update public data [skip ci]"
            git pull --rebase origin main
            git push
          else
            echo "No changes to commit."
          fi
         
  analysis:
    name: 2) Analysis — jelzésképzés (csak trading után)
    needs: trading
    runs-on: ubuntu-latest
    env:
      SESSION_OVERRIDE_24_7: "1"
    steps:
      - name: Checkout (fresh HEAD incl. trading commit)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Sync with latest trading outputs
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Show sklearn/joblib versions
        run: |
          python - <<'PY'
          import sklearn, joblib
          print("scikit-learn:", sklearn.__version__)
          print("joblib:", joblib.__version__)
          PY

      - name: Verify model exists & loadable
        run: python scripts/check_ml_readiness.py BTCUSD

      - name: Run analysis with ML preferred
        env:
          USE_ML: "1"
        run: |
          python analysis.py
          python - <<'PY'
          import json, pathlib
          signal_path = pathlib.Path("public/BTCUSD/signal.json")
          data = json.loads(signal_path.read_text())
          source = data.get("probability_stack", {}).get("source")
          print("probability_stack.source =", source)
          if source != "sklearn":
              raise SystemExit("ML probability stack not sourced from scikit-learn")
          PY

      - name: Commit & Push analysis outputs
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A public
          if ! git diff --cached --quiet; then
            git commit -m "analysis.py: update signals/summary [skip ci]"
            git pull --rebase origin main
            git push
          else
            echo "No changes to commit."
          fi
  predeploy:
    name: 3) Pre-deploy verification & tests
    needs: analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Sync with origin/main
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Clean Python caches
        run: |
          find . -type d -name "__pycache__" -exec rm -rf {} +
          find . -name "*.pyc" -delete

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Verify analysis.py hash against origin/main
        run: |
          set -euo pipefail
          current_hash=$(sha256sum analysis.py | awk '{print $1}')
          remote_hash=$(git show origin/main:analysis.py | sha256sum | awk '{print $1}')
          echo "analysis.py working hash: $current_hash"
          echo "analysis.py origin/main hash: $remote_hash"
          if [ "$current_hash" != "$remote_hash" ]; then
            echo "analysis.py hash mismatch detected" >&2
            exit 1
          fi

      - name: Run pytest suite
        run: pytest

      - name: Ensure checked-out commit matches origin/main HEAD
        run: |
          set -euo pipefail
          git fetch origin main
          head_rev=$(git rev-parse HEAD)
          main_rev=$(git rev-parse origin/main)
          echo "HEAD revision: $head_rev"
          echo "origin/main revision: $main_rev"
          if [ "$head_rev" != "$main_rev" ]; then
            echo "Working commit diverges from origin/main" >&2
            exit 1
          fi

  notify:
    name: 4) Discord értesítő
    needs:
      - analysis
      - predeploy
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      DISCORD_COOLDOWN_MIN: ${{ secrets.DISCORD_COOLDOWN_MIN }}
      DISCORD_COOLDOWN_MOMENTUM_MIN: ${{ secrets.DISCORD_COOLDOWN_MOMENTUM_MIN }}
    steps:
      - name: Checkout latest signals
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Sync with latest main
        run: |
          git fetch origin main
          git reset --hard origin/main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Discord notifier
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            python scripts/notify_discord.py --manual
          else
            python scripts/notify_discord.py
          fi

      - name: Commit & Push notify state
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if test -f public/_notify_state.json; then
            git add public/_notify_state.json
            if ! git diff --cached --quiet; then
              git commit -m "notify_discord: update state [skip ci]"
              git pull --rebase origin main
              git push
            else
              echo "Notify state unchanged."
            fi
          else
            echo "No notify state to persist."
          fi
