name: market-intraday-json

on:
  workflow_dispatch:
  # 30 percenként, egész nap (UTC). A következő lépésben helyi idő szerint szűrünk (DST-álló).
  schedule:
    - cron: "*/30 * * * *"

permissions:
  contents: write

concurrency:
  group: "market-intraday-json"
  cancel-in-progress: false

jobs:
  fetch_and_analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gate by local time (Europe/Budapest)
        shell: bash
        run: |
          TZ="Europe/Budapest"
          HOUR=$(TZ=$TZ date +%H)
          DOW=$(TZ=$TZ date +%u)   # 1=hétfő … 7=vasárnap
          if [ "$DOW" -ge 6 ]; then
            echo "Weekend → skip"
            exit 0
          fi
          if [ "$HOUR" -lt 8 ] || [ "$HOUR" -gt 22 ]; then
            echo "Outside 08–22 local → skip"
            exit 0
          fi

      - name: Ensure jq & curl
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Prepare report dir
        run: |
          mkdir -p report

      - name: Fetch natív JSON a Workerből (SOL, NSDQ100, GOLD_CFD) + fallback + URL log
        shell: bash
        run: |
          set -euo pipefail
          UA="etoro-agent/1.0"
          HDR=(-H "Accept: application/json" -H "User-Agent: ${UA}")
          LOGF="report/fetch_urls.log"
          : > "$LOGF"
          log() { echo "[$(date -u +%FT%TZ)] $*"; }
          log_url(){ echo "$1|$2|$3" >> "$LOGF"; }

          sleep $((RANDOM%7+3))  # kis jitter

          fetch_asset() { # $1 = ASSET
            ASSET="$1"
            PRIMARY="https://market-feed-proxy.czipo-agnes.workers.dev/h/all?asset=${ASSET}&fields=spot,k5m,k1h,k4h"
            log "PRIMARY  : $PRIMARY"

            if RESP="$(curl -fsS "$PRIMARY" "${HDR[@]}" --retry 5 --retry-delay 3 --retry-all-errors)"; then
              log "OK       : /h/all JSON for $ASSET"
              log_url "$ASSET" "PRIMARY" "$PRIMARY"
            else
              log "WARN     : /h/all failed → Worker single-file"
              SPOT_URL="https://market-feed-proxy.czipo-agnes.workers.dev/spot?asset=${ASSET}"
              K5M_URL="https://market-feed-proxy.czipo-agnes.workers.dev/k5m?asset=${ASSET}"
              K1H_URL="https://market-feed-proxy.czipo-agnes.workers.dev/k1h?asset=${ASSET}"
              K4H_URL="https://market-feed-proxy.czipo-agnes.workers.dev/k4h?asset=${ASSET}"

              SPOT="$(curl -fsS "$SPOT_URL" "${HDR[@]}" --retry 5 --retry-delay 3 --retry-all-errors || true)"; [[ -n "${SPOT}" ]] && log_url "$ASSET" "SINGLE" "$SPOT_URL"
              K5M="$(curl -fsS "$K5M_URL"  "${HDR[@]}" --retry 5 --retry-delay 3 --retry-all-errors || true)"; [[ -n "${K5M}"  ]] && log_url "$ASSET" "SINGLE" "$K5M_URL"
              K1H="$(curl -fsS "$K1H_URL"  "${HDR[@]}" --retry 5 --retry-delay 3 --retry-all-errors || true)"; [[ -n "${K1H}"  ]] && log_url "$ASSET" "SINGLE" "$K1H_URL"
              K4H="$(curl -fsS "$K4H_URL"  "${HDR[@]}" --retry 5 --retry-delay 3 --retry-all-errors || true)"; [[ -n "${K4H}"  ]] && log_url "$ASSET" "SINGLE" "$K4H_URL"

              NEED_RAW=false
              [[ -z "${SPOT}" || -z "${K1H}" ]] && NEED_RAW=true
              if $NEED_RAW; then
                log "WARN     : single-file incomplete → RAW"
                TS="$(date +%s)"
                RAW_SPOT="https://raw.githubusercontent.com/Wildfire0007/market-feed/main/${ASSET}/spot.json?ts=${TS}"
                RAW_K5M="https://raw.githubusercontent.com/Wildfire0007/market-feed/main/${ASSET}/klines_5m.json?ts=${TS}"
                RAW_K1H="https://raw.githubusercontent.com/Wildfire0007/market-feed/main/${ASSET}/klines_1h.json?ts=${TS}"
                RAW_K4H="https://raw.githubusercontent.com/Wildfire0007/market-feed/main/${ASSET}/klines_4h.json?ts=${TS}"

                SPOT="$(curl -fsS "$RAW_SPOT" || true)"; [[ -n "${SPOT}" ]] && log_url "$ASSET" "RAW" "$RAW_SPOT"
                K5M="$(curl -fsS "$RAW_K5M" || true)"; [[ -n "${K5M}"  ]] && log_url "$ASSET" "RAW" "$RAW_K5M"
                K1H="$(curl -fsS "$RAW_K1H" || true)"; [[ -n "${K1H}"  ]] && log_url "$ASSET" "RAW" "$RAW_K1H"
                K4H="$(curl -fsS "$RAW_K4H" || true)"; [[ -n "${K4H}"  ]] && log_url "$ASSET" "RAW" "$RAW_K4H"
              fi

              [[ -z "${SPOT}" ]] && SPOT=null
              [[ -z "${K5M}"  ]] && K5M=null
              [[ -z "${K1H}"  ]] && K1H=null
              [[ -z "${K4H}"  ]] && K4H=null

              RESP="$(jq -n --arg asset "${ASSET}" \
                           --argjson spot "${SPOT}" \
                           --argjson k5m  "${K5M}" \
                           --argjson k1h  "${K1H}" \
                           --argjson k4h  "${K4H}" \
                           '{ok:true, asset:$asset, spot:$spot, k5m:$k5m, k1h:$k1h, k4h:$k4h, source:"fallback"}')"
            fi

            if [[ "${ASSET}" == "SOL" ]]; then
              AGE="$(echo "${RESP}" | jq -r '.spot.age_sec // 0')"
              if [[ "${AGE}" == "null" || "${AGE}" -gt 1200 ]]; then
                CG_URL='https://api.coingecko.com/api/v3/simple/price?ids=solana&vs_currencies=usd&include_last_updated_at=true'
                CG="$(curl -fsS "$CG_URL" -H "User-Agent: ${UA}" --retry 3 --retry-delay 2 --retry-all-errors || true)"; [[ -n "${CG}" ]] && log_url "$ASSET" "TICKER" "$CG_URL"
                if [[ -z "${CG}" ]]; then
                  CB_URL='https://api.exchange.coinbase.com/products/SOL-USD/ticker'
                  KR_URL='https://api.kraken.com/0/public/Ticker?pair=SOLUSD'
                  OK_URL='https://www.okx.com/api/v5/market/ticker?instId=SOL-USD'
                  CB="$(curl -fsS "$CB_URL" || true)"; [[ -n "${CB}" ]] && log_url "$ASSET" "TICKER" "$CB_URL"
                  KR="$(curl -fsS "$KR_URL" || true)"; [[ -n "${KR}" ]] && log_url "$ASSET" "TICKER" "$KR_URL"
                  OK="$(curl -fsS "$OK_URL" || true)"; [[ -n "${OK}" ]] && log_url "$ASSET" "TICKER" "$OK_URL"
                fi
              fi
            fi

            echo "${RESP}" | jq '.' > "out_${ASSET}.json"
            log "SAVED    : out_${ASSET}.json"
          }

          fetch_asset SOL
          fetch_asset NSDQ100
          fetch_asset GOLD_CFD

      - name: Fetch 1D chart PNG-k (best-effort)
        run: |
          UA="etoro-agent/1.0"
          mkdir -p report
          for a in SOL NSDQ100 GOLD_CFD; do
            curl -fsS "https://market-feed-proxy.czipo-agnes.workers.dev/chart?asset=$a" -H "User-Agent: ${UA}" -o "report/chart_${a}_1d.png" || true
          done

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install analysis deps
        run: |
          python -V
          pip install --upgrade pip
          pip install pandas numpy

      - name: Run intraday analysis → report
        run: |
          python scripts/intraday_report.py

      - name: Commit reports to repo (reports/<TS> és reports/latest)
        if: always()
        run: |
          TS=$(date -u +%Y%m%d_%H%M)
          DEST="reports/${TS}"
          mkdir -p "$DEST"
          cp -v report/* "$DEST"/

          # 'latest' frissítése (mappa újraírása)
          rm -rf reports/latest
          mkdir -p reports/latest
          cp -v report/* reports/latest/

          # index fájl opcionálisan
          if [ ! -f reports/README.md ]; then
            echo "# Intraday reports" > reports/README.md
            echo "" >> reports/README.md
            echo "- **latest/** – mindig a legutóbbi futás" >> reports/README.md
          fi

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A reports/
          git commit -m "Add intraday report ${TS} (auto)" || echo "Nothing to commit"
          git push


      - name: Highlight signals in job summary
        if: always()
        shell: bash
        run: |
          echo "## Eredmény összefoglaló" >> $GITHUB_STEP_SUMMARY
          if grep -q "Belépő" report/analysis_report.md; then
            echo "🔔 **Talált belépő jelzés!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ Nincs belépő." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload artifacts (JSON + Report + Logs + Charts)
        uses: actions/upload-artifact@v4
        with:
          name: market-output
          path: |
            out_SOL.json
            out_NSDQ100.json
            out_GOLD_CFD.json
            report/analysis_report.md
            report/summary.csv
            report/fetch_urls.log
            report/chart_SOL_1d.png
            report/chart_NSDQ100_1d.png
            report/chart_GOLD_CFD_1d.png
          retention-days: 7
